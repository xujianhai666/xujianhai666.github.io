<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on zero.xu blog</title>
    <link>https://xujianhai.fun/tags/mysql/</link>
    <description>Recent content in mysql on zero.xu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 Apr 2020 20:51:59 +0800</lastBuildDate>
    
	<atom:link href="https://xujianhai.fun/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql_basic</title>
      <link>https://xujianhai.fun/posts/mysql_basic/</link>
      <pubDate>Sat, 11 Apr 2020 20:51:59 +0800</pubDate>
      
      <guid>https://xujianhai.fun/posts/mysql_basic/</guid>
      <description>背景 假设一个面试者过来面试, 想要考察mysql方面, 我该怎么考察呢? 从整体上而言, mysql 还是偏基础概念, 比如 事务和锁.
理解与概念 首先需要确保候选人理解以下的基本概念:
 索引  InnoDB支持的几种索引类型:
 hash索引 B+索引 全文索引  B+数中的索引类型:
 聚簇索引: 节点页只包含了索引列，叶子页包含了行的全部数据 覆盖索引: 一个查询语句的执行只用从索引中就能够取得，不必从数据表中读 联合索引: 表上的多个列进行索引. 最左前缀: 最常用的在最左边  慢查询优化经验. 索引没有被使用的情况 遇到过? 如何判断索引生效?
 explain 的使用  事务  什么是事务 以及 事务的四个特征: acid
事务的隔离级别: 读未提交 、读已提交(解决脏读)、可重复读(解决不可重复读)、可串行化(幻读: 插入了新数据)
InnoDB 怎么解决幻读的? mvcc + 间隙锁(gap lock)、next-key lock, mysql的读已提交
什么是gap lock、next-key lock?
当我们用范围条件进行查询, InnoDB 除了给 符合条件的数据的索引加锁, 还会给 在条件范围内但并不存在的记录 进行加锁,
代理  如何自己设计一个代理, 怎么设计?</description>
    </item>
    
  </channel>
</rss>